<?xml version="1.0" encoding="utf-8"?>
<SyntaxEdit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <BorderStyle>None</BorderStyle>
  <Pages>
    <DefaultPage>
      <Header>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Header>
      <Footer>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Footer>
      <PageSize>
        <Width>0</Width>
        <Height>0</Height>
      </PageSize>
    </DefaultPage>
  </Pages>
  <DisplayStrings />
  <Selection>
    <SelectionRect>
      <Location>
        <X>0</X>
        <Y>1229</Y>
      </Location>
      <Size>
        <Width>24</Width>
        <Height>5</Height>
      </Size>
      <X>0</X>
      <Y>1229</Y>
      <Width>24</Width>
      <Height>5</Height>
    </SelectionRect>
    <Options>UseColors OverwriteBlocks SelectLineOnTripleClick CopyLineWhenEmpty SelectWordOnCtrlClick</Options>
  </Selection>
  <Gutter>
    <LineNumbersForeColor>WindowText</LineNumbersForeColor>
    <Options>PaintLineNumbers PaintBookMarks PaintLineModificators</Options>
  </Gutter>
  <Margin>
    <Visible>false</Visible>
  </Margin>
  <LineStyles />
  <LineSeparator />
  <Printing>
    <Footer>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Footer>
    <Header>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Header>
  </Printing>
  <WhiteSpace />
  <TextSource>
    <Position>
      <X>0</X>
      <Y>1229</Y>
    </Position>
    <Lexer>
      <Scheme>
        <Author>Quantum Whale, LLC.</Author>
        <Copyright>Copyright (c) 2004 - 2014 Quantum Whale LLC.</Copyright>
        <FileType>gas</FileType>
        <Version>1.5</Version>
        <Styles>
          <Style>
            <Name>idents</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>numbers</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>reswords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>comments</Name>
            <ForeColor>Green</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>xmlcomments</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>symbols</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>whitespace</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>strings</Name>
            <ForeColor>Maroon</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>directives</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>htmlparams</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>syntax errors</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>codes nippets</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>255:180:228:180</BackColor>
          </Style>
          <Style>
            <Name>GabReservedWords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>GabTokenWithBrackets</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>GabFunctionIntrinsicDebug</Name>
            <ForeColor>White</ForeColor>
            <BackColor>Red</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>GabVariable</Name>
            <ForeColor>Teal</ForeColor>
          </Style>
          <Style>
            <Name>GabVariableSystemDefined</Name>
            <ForeColor>Teal</ForeColor>
            <FontStyle>Bold Italic</FontStyle>
          </Style>
          <Style>
            <Name>GabGui</Name>
            <ForeColor>OrangeRed</ForeColor>
          </Style>
          <Style>
            <Name>GabProgramSubStartEnd</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>LightGray</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
        </Styles>
      </Scheme>
    </Lexer>
    <TextStrings>
      <Lines>
        <string>Program.Sub.ScreenSU.Start</string>
        <string>Gui.F_ContactList..create</string>
        <string>Gui.F_ContactList..caption("Email Purchase Order")</string>
        <string>Gui.F_ContactList..size(7425,7305)</string>
        <string>Gui.F_ContactList..position(0,0)</string>
        <string>Gui.F_ContactList..event(UnLoad,f_contactlist_unload)</string>
        <string>Gui.F_ContactList..alwaysontop(False)</string>
        <string>Gui.F_ContactList..fontname("Arial")</string>
        <string>Gui.F_ContactList..fontsize(8)</string>
        <string>Gui.F_ContactList..forecolor(0)</string>
        <string>Gui.F_ContactList..BackColor(-2147483633)</string>
        <string>Gui.F_ContactList..controlbox(True)</string>
        <string>Gui.F_ContactList..maxbutton(True)</string>
        <string>Gui.F_ContactList..minbutton(True)</string>
        <string>Gui.F_ContactList..mousepointer(0)</string>
        <string>Gui.F_ContactList..moveable(True)</string>
        <string>Gui.F_ContactList..sizeable(True)</string>
        <string>Gui.F_ContactList..ShowInTaskBar(True)</string>
        <string>Gui.F_ContactList..titlebar(True)</string>
        <string>Gui.F_ContactList..MinX(0)</string>
        <string>Gui.F_ContactList..MinY(0)</string>
        <string>Gui.F_ContactList.lstEmails.create(listbox)</string>
        <string>Gui.F_ContactList.lstEmails.visible(True)</string>
        <string>Gui.F_ContactList.lstEmails.size(3045,1050)</string>
        <string>Gui.F_ContactList.lstEmails.zorder(0)</string>
        <string>Gui.F_ContactList.lstEmails.position(4000,500)</string>
        <string>Gui.F_ContactList.lstEmails.enabled(True)</string>
        <string>Gui.F_ContactList.lstEmails.fontname("Arial")</string>
        <string>Gui.F_ContactList.lstEmails.fontsize(8)</string>
        <string>Gui.F_ContactList.lstEmails.tabstop(True)</string>
        <string>Gui.F_ContactList.lstEmails.tabindex(4)</string>
        <string>Gui.F_ContactList.txtEmail.create(textbox,"",True,3690,300,0,100,1200,True,0,Arial,8,-2147483643,1)</string>
        <string>Gui.F_ContactList.txtEmail.tabstop(True)</string>
        <string>Gui.F_ContactList.txtEmail.tabindex(2)</string>
        <string>Gui.F_ContactList.cmdAdd.create(button)</string>
        <string>Gui.F_ContactList.cmdAdd.caption("Add")</string>
        <string>Gui.F_ContactList.cmdAdd.visible(True)</string>
        <string>Gui.F_ContactList.cmdAdd.size(840,375)</string>
        <string>Gui.F_ContactList.cmdAdd.zorder(0)</string>
        <string>Gui.F_ContactList.cmdAdd.position(100,1600)</string>
        <string>Gui.F_ContactList.cmdAdd.enabled(True)</string>
        <string>Gui.F_ContactList.cmdAdd.fontname("Arial")</string>
        <string>Gui.F_ContactList.cmdAdd.fontsize(8)</string>
        <string>Gui.F_ContactList.cmdAdd.event(Click,cmdadd_click)</string>
        <string>Gui.F_ContactList.cmdAdd.tabstop(True)</string>
        <string>Gui.F_ContactList.cmdAdd.tabindex(3)</string>
        <string>Gui.F_ContactList.cmdRemove.create(button)</string>
        <string>Gui.F_ContactList.cmdRemove.caption("Remove")</string>
        <string>Gui.F_ContactList.cmdRemove.visible(True)</string>
        <string>Gui.F_ContactList.cmdRemove.size(810,375)</string>
        <string>Gui.F_ContactList.cmdRemove.zorder(0)</string>
        <string>Gui.F_ContactList.cmdRemove.position(1100,1600)</string>
        <string>Gui.F_ContactList.cmdRemove.enabled(True)</string>
        <string>Gui.F_ContactList.cmdRemove.fontname("Arial")</string>
        <string>Gui.F_ContactList.cmdRemove.fontsize(8)</string>
        <string>Gui.F_ContactList.cmdRemove.event(Click,cmdremove_click)</string>
        <string>Gui.F_ContactList.cmdRemove.tabstop(True)</string>
        <string>Gui.F_ContactList.cmdRemove.tabindex(5)</string>
        <string>Gui.F_ContactList.lbl1.create(label,"Choose an existing contact",True,2565,255,1,100,300,True,0,Arial,8,-2147483633,0)</string>
        <string>Gui.F_ContactList.lbl2.create(label,"Enter an email address",True,2850,255,1,100,1000,True,0,Arial,8,-2147483633,0)</string>
        <string>Gui.F_ContactList.cmdSend.create(button)</string>
        <string>Gui.F_ContactList.cmdSend.caption("Send")</string>
        <string>Gui.F_ContactList.cmdSend.visible(True)</string>
        <string>Gui.F_ContactList.cmdSend.size(855,360)</string>
        <string>Gui.F_ContactList.cmdSend.zorder(0)</string>
        <string>Gui.F_ContactList.cmdSend.position(100,6350)</string>
        <string>Gui.F_ContactList.cmdSend.enabled(True)</string>
        <string>Gui.F_ContactList.cmdSend.fontname("Arial")</string>
        <string>Gui.F_ContactList.cmdSend.fontsize(8)</string>
        <string>Gui.F_ContactList.cmdSend.event(Click,cmdsend_click)</string>
        <string>Gui.F_ContactList.cmdSend.tabstop(True)</string>
        <string>Gui.F_ContactList.cmdSend.tabindex(8)</string>
        <string>Gui.F_ContactList.mltxtBody.create(textboxm)</string>
        <string>Gui.F_ContactList.mltxtBody.text("")</string>
        <string>Gui.F_ContactList.mltxtBody.visible(True)</string>
        <string>Gui.F_ContactList.mltxtBody.size(6915,2595)</string>
        <string>Gui.F_ContactList.mltxtBody.zorder(0)</string>
        <string>Gui.F_ContactList.mltxtBody.position(100,3630)</string>
        <string>Gui.F_ContactList.mltxtBody.enabled(True)</string>
        <string>Gui.F_ContactList.mltxtBody.alignment(0)</string>
        <string>Gui.F_ContactList.mltxtBody.fontname("Arial")</string>
        <string>Gui.F_ContactList.mltxtBody.fontsize(8)</string>
        <string>Gui.F_ContactList.mltxtBody.BackColor(-2147483643)</string>
        <string>Gui.F_ContactList.mltxtBody.tabstop(True)</string>
        <string>Gui.F_ContactList.mltxtBody.tabindex(7)</string>
        <string>Gui.F_ContactList.txtSubject.create(textbox,"",True,6930,300,0,85,3000,True,0,Arial,8,-2147483643,1)</string>
        <string>Gui.F_ContactList.txtSubject.maxLength(72)</string>
        <string>Gui.F_ContactList.txtSubject.tabstop(True)</string>
        <string>Gui.F_ContactList.txtSubject.tabindex(6)</string>
        <string>Gui.F_ContactList.lbl3.create(label,"Subject",True,1935,255,1,100,2775,True,0,Arial,8,-2147483633,0)</string>
        <string>Gui.F_ContactList.lbl4.create(label,"Body",True,1935,255,1,100,3405,True,0,Arial,8,-2147483633,0)</string>
        <string>Gui.F_ContactList.lbl5.create(label,"Recipients",True,1935,255,1,4000,300,True,0,Arial,8,-2147483633,0)</string>
        <string>Gui.F_ContactList.lbl6.create(label,"Reply To Email Address",True,1935,255,1,100,2125,True,0,Arial,8,-2147483633,0)</string>
        <string>Gui.F_ContactList.txtReplyEmail.create(textbox,"",True,3690,300,0,100,2360,True,0,Arial,8,-2147483643,1)</string>
        <string>Gui.F_ContactList.ddlContact.create(dropdownlist)</string>
        <string>Gui.F_ContactList.ddlContact.visible(True)</string>
        <string>Gui.F_ContactList.ddlContact.size(3690,330)</string>
        <string>Gui.F_ContactList.ddlContact.zorder(0)</string>
        <string>Gui.F_ContactList.ddlContact.position(100,545)</string>
        <string>Gui.F_ContactList.ddlContact.enabled(True)</string>
        <string>Gui.F_ContactList.ddlContact.fontname("Arial")</string>
        <string>Gui.F_ContactList.ddlContact.fontsize(8)</string>
        <string>Gui.F_ContactList.ddlContact.event(Click,ddlcontact_click)</string>
        <string>Gui.F_Date..Create</string>
        <string>Gui.F_Date..Caption("Effective Date")</string>
        <string>Gui.F_Date..Size(3900,1920)</string>
        <string>Gui.F_Date..MinX(0)</string>
        <string>Gui.F_Date..MinY(0)</string>
        <string>Gui.F_Date..Position(0,0)</string>
        <string>Gui.F_Date..BackColor(-2147483633)</string>
        <string>Gui.F_Date..MousePointer(0)</string>
        <string>Gui.F_Date..Event(UnLoad,F_Date_UnLoad)</string>
        <string>Gui.F_Date.lbl1.Create(Label,"Select Effective Date",True,1935,255,0,780,375,True,0,"Arial",8,-986896,0)</string>
        <string>Gui.F_Date.dtpEffectiveDate.Create(DatePicker)</string>
        <string>Gui.F_Date.dtpEffectiveDate.Size(1935,285)</string>
        <string>Gui.F_Date.dtpEffectiveDate.Position(780,675)</string>
        <string>Gui.F_Date.dtpEffectiveDate.Event(Change,dtpEffectiveDate_Change)</string>
        <string>Program.Sub.ScreenSU.End</string>
        <string />
        <string>Program.Sub.Preflight.Start</string>
        <string>Variable.Global.sCompID.Declare(String)</string>
        <string>Variable.Global.sCompName.Declare(String)</string>
        <string>Variable.Global.sTranNum.Declare(String)</string>
        <string>Variable.Global.sFullTranNum.Declare(String)</string>
        <string>Variable.Global.bBal.Declare(Boolean,False)</string>
        <string>Variable.Global.sAcctNum.Declare(String)</string>
        <string>Variable.Global.sImmDestTran.Declare(String)</string>
        <string>Variable.Global.sImmDest.Declare(String)</string>
        <string>Variable.Global.sImmOri.Declare(String)</string>
        <string>Variable.Global.sImmOriTran.Declare(String)</string>
        <string>Variable.UDT.uPayments.Define("Vendor_ID",String)</string>
        <string>Variable.UDT.uPayments.Define("Vendor_Name",String)</string>
        <string>Variable.UDT.uPayments.Define("Batch_Num",String)</string>
        <string>Variable.UDT.uPayments.Define("Check_Date",Date)</string>
        <string>Variable.UDT.uPayments.Define("Check_Amt",Float)</string>
        <string>Variable.UDT.uPayments.Define("Invoice",String)</string>
        <string>Variable.uGlobal.uPayments.Declare("uPayments")</string>
        <string>Variable.UDT.uVendor.Define("Vendor_ID",String)</string>
        <string>Variable.UDT.uVendor.Define("Invoices",String)</string>
        <string>Variable.UDT.uVendor.Define("Vendor_Name",String)</string>
        <string>Variable.UDT.uVendor.Define("Pay_Amount",Float)</string>
        <string>Variable.uGlobal.uVendor.Declare("uVendor")</string>
        <string>Variable.Global.sVendorID.Declare(String)</string>
        <string>Variable.Global.bBusy.Declare(Boolean,False)</string>
        <string>Variable.Global.sList.Declare(String)</string>
        <string>Variable.Global.sImmOriTranTrim.Declare(String)</string>
        <string>V.Global.dEffectiveDate.Declare(Date)</string>
        <string>Program.Sub.Preflight.End</string>
        <string />
        <string>Program.Sub.Main.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Main_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)</string>
        <string>V.uGlobal.uPayments.Redim(-1,-1)</string>
        <string>V.uGlobal.uVendor.Redim(-1,-1)</string>
        <string />
        <string>'call form for date picker</string>
        <string>F.Intrinsic.Date.DateAdd("D", 1, V.Ambient.Date, V.Global.dEffectiveDate)</string>
        <string>GUI.F_Date.dtpEffectiveDate.Value(V.Global.dEffectiveDate.DateComp)</string>
        <string>GUI.F_Date..Show</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Main_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Main.End</string>
        <string />
        <string>Program.Sub.Unload.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Unload_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!con.Close</string>
        <string>F.Intrinsic.Control.End</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Unload_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.End</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Unload.End</string>
        <string />
        <string>Program.Sub.OpChk.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("OpChk_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string />
        <string>'First checking for ACH records to actually export</string>
        <string>V.Local.sSql.Set("Select * from V_ACH_PAYMENT where EXPORTED = ''")</string>
        <string>F.ODBC.Connection!con.OpenLocalRecordsetRO("rst",V.Local.sSql)</string>
        <string>F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>	F.ODBC.con!rst.Close</string>
        <string>	F.Intrinsic.UI.Msgbox("No ACH records found!","No Records")</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>F.Intrinsic.Control.Else</string>
        <string>	F.ODBC.con!rst.Close</string>
        <string />
        <string>	'Checking to see if the Balanced in the Company Options whas selected or not</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400026' and SEQUENCE = '0007'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Balancing option not selected.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.Con!rst.FieldValLong!F_BOOLEAN,=,1)</string>
        <string>			V.Global.bBal.Set(False)</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>			V.Global.bBal.Set(True)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Getting ACH Company ID from Company Options</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400026' and SEQUENCE = '0006'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("ACH Company ID not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sCompID.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.ODBC.Con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Getting Company Name from Company Options</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400026' and SEQUENCE = '0004'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Company Name not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sCompName.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.ODBC.Con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Getting bank transit number</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400026' and SEQUENCE = '0002'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Bank Transit Number not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sTranNum.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.Intrinsic.String.Left(V.Global.sTranNum,8,V.Global.sTranNum)</string>
        <string>		V.Global.sFullTranNum.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.ODBC.Con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Getting bank account number</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400026' and SEQUENCE = '0008'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Bank Account Number not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sAcctNum.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.ODBC.Con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Getting immediate destination name and number</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400803' and SEQUENCE = '0001'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Immediate Destination Name not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sImmDest.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400803' and SEQUENCE = '0002'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Immediate Destination Transit Number not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sImmDestTran.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Getting immediate origin name and number</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400803' and SEQUENCE = '0003'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Immediate Origin Name not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sImmOri.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rst","Select * from OP_HEADER where ID = '400803' and SEQUENCE = '0004'")</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>		F.Intrinsic.UI.Msgbox("Immediate Origin Transit Number not entered.  Please update ACH Options.","Option Error")</string>
        <string>		F.Intrinsic.Control.CallSub(Unload)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sImmOriTran.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		V.Global.sImmOriTranTrim.Set(V.ODBC.con!rst.FieldValTrim!TEXT1)</string>
        <string>		F.Intrinsic.String.Left(V.Global.sImmOriTranTrim,8,V.Global.sImmOriTranTrim)</string>
        <string>		F.ODBC.con!rst.Close</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.CallSub(Buildfile)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("OpChk_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.OpChk.End</string>
        <string />
        <string>Program.Sub.BuildFile.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("BuildFile_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.sTransCode.Declare(String)</string>
        <string>V.Local.sRcvTranNum.Declare(String)</string>
        <string>V.Local.sChkAmt.Declare(String)</string>
        <string>V.Local.sTotalAmt.Declare(String)</string>
        <string>V.Local.sBalAmt.Declare(String)</string>
        <string>V.Local.fTotalAmt.Declare(Float)</string>
        <string>V.Local.sPosValues.Declare(String)</string>
        <string>V.Local.iPosDetailLen.Declare(Long)</string>
        <string>V.Local.iPosBatchTrlLen.Declare(Long)</string>
        <string>V.Local.iPosBatchHdrLen.Declare(Long)</string>
        <string>V.Local.iPosFileTrlLen.Declare(Long)</string>
        <string>V.Local.iPosFileHdrLen.Declare(Long)</string>
        <string>V.Local.sDetail.Declare(String)</string>
        <string>V.Local.sBatchTrl.Declare(String)</string>
        <string>V.Local.sBatchHdr.Declare(String)</string>
        <string>V.Local.sFileTrl.Declare(String)</string>
        <string>V.Local.sFileHdr.Declare(String)</string>
        <string>V.Local.sFileWrite.Declare(String)</string>
        <string>V.Local.iTraceNum.Declare(Long)</string>
        <string>V.Local.sTraceNum.Declare(String)</string>
        <string>V.Local.iHash.Declare(Long)</string>
        <string>V.Local.sHash.Declare(String)</string>
        <string>V.Local.sCompName.Declare(String)</string>
        <string>V.Local.iBatchNum.Declare(Long)</string>
        <string>V.Local.sBatchNum.Declare(String)</string>
        <string>V.Local.iAddendaCnt.Declare(Long)</string>
        <string>V.Local.sAddendaCnt.Declare(String)</string>
        <string>V.Local.sClass.Declare(String)</string>
        <string>V.Local.iMonth.Declare(Long)</string>
        <string>V.Local.iDay.Declare(Long)</string>
        <string>V.Local.sEntryDesc.Declare(String)</string>
        <string>V.Local.sEntryDate.Declare(String)</string>
        <string>V.Local.iBlockCnt.Declare(Long)</string>
        <string>V.Local.sBlockCnt.Declare(String)</string>
        <string>V.Local.sTime.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.iMod.Declare(Long)</string>
        <string>V.Local.sFill.Declare(String)</string>
        <string>V.Local.sTraceTran.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.iUB.Declare(Long)</string>
        <string>V.Local.sVendAccount.Declare(String)</string>
        <string>V.Local.sVendID.Declare(String)</string>
        <string>V.Local.sVendName.Declare(String)</string>
        <string>V.Local.iPosFileHdrAlign.Declare(Long)</string>
        <string>V.Local.iPosFileTrlAlign.Declare(Long)</string>
        <string>V.Local.iPosBatchHdrAlign.Declare(Long)</string>
        <string>V.Local.iPosBatchTrlAlign.Declare(Long)</string>
        <string>V.Local.iPosDetailAlign.Declare(Long)</string>
        <string>V.Local.sInvoiceList.Declare(String)</string>
        <string>V.Local.sBlankDate.Declare(String)</string>
        <string>V.Local.sEffectiveDate.Declare(String)</string>
        <string />
        <string>'Setting lengths for record types</string>
        <string>'V.Local.sPosDetailLen.Set("1*!*2*!*8*!*1*!*17*!*10*!*15*!*22*!*2*!*1*!*15")</string>
        <string>F.Intrinsic.String.Split("1*!*2*!*8*!*1*!*17*!*10*!*15*!*22*!*2*!*1*!*15","*!*",V.Local.iPosDetailLen)</string>
        <string />
        <string>'V.Local.sPosDetailAlign.Set("0*!*0*!*0*!*0*!*0*!*11*!*0*!*0*!*0*!*0*!*11")</string>
        <string>F.Intrinsic.String.Split("0*!*0*!*0*!*0*!*0*!*11*!*0*!*0*!*0*!*0*!*11","*!*",V.Local.iPosDetailAlign)</string>
        <string />
        <string>'V.Local.sPosBatchTrlLen.Set("1*!*3*!*6*!*10*!*12*!*12*!*10*!*25*!*8*!*7")</string>
        <string>F.Intrinsic.String.Split("1*!*3*!*6*!*10*!*12*!*12*!*10*!*25*!*8*!*7","*!*",V.Local.iPosBatchTrlLen)</string>
        <string />
        <string>'V.Local.sPosBatchTrlAlign.Set("0*!*0*!*11*!*11*!*11*!*11*!*0*!*0*!*0*!*11")</string>
        <string>F.Intrinsic.String.Split("0*!*0*!*11*!*11*!*11*!*11*!*0*!*0*!*0*!*11","*!*",V.Local.iPosBatchTrlAlign)</string>
        <string />
        <string>'V.Local.sPosBatchHdrLen.Set("1*!*3*!*16*!*20*!*10*!*3*!*10*!*6*!*6*!*3*!*1*!*8*!*7")</string>
        <string>F.Intrinsic.String.Split("1*!*3*!*16*!*20*!*10*!*3*!*10*!*6*!*6*!*3*!*1*!*8*!*7","*!*",V.Local.iPosBatchHdrLen)</string>
        <string />
        <string>'V.Local.sPosBatchHdrAlign.Set("0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*11")</string>
        <string>F.Intrinsic.String.Split("0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*11","*!*",V.Local.iPosBatchHdrAlign)</string>
        <string />
        <string>'V.Local.sPosFileTrlLen.Set("1*!*6*!*6*!*8*!*10*!*12*!*12*!*39")</string>
        <string>F.Intrinsic.String.Split("1*!*6*!*6*!*8*!*10*!*12*!*12*!*39","*!*",V.Local.iPosFileTrlLen)</string>
        <string />
        <string>'V.Local.sPosFileTrlAlign.Set("0*!*0*!*0*!*11*!*11*!*11*!*11*!*0")</string>
        <string>F.Intrinsic.String.Split("0*!*0*!*0*!*11*!*11*!*11*!*11*!*0","*!*",V.Local.iPosFileTrlAlign)</string>
        <string />
        <string>'V.Local.sPosFileHdrLen.Set("1*!*2*!*10*!*10*!*6*!*4*!*1*!*3*!*2*!*1*!*23*!*23*!*8")</string>
        <string>F.Intrinsic.String.Split("1*!*2*!*10*!*10*!*6*!*4*!*1*!*3*!*2*!*1*!*23*!*23*!*8","*!*",V.Local.iPosFileHdrLen)</string>
        <string />
        <string>'V.Local.sPosFileHdrAlign.Set("0*!*0*!*1*!*1*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0")</string>
        <string>F.Intrinsic.String.Split("0*!*0*!*1*!*1*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0","*!*",V.Local.iPosFileHdrAlign)</string>
        <string />
        <string>'Selecting distinct batch records from the ACH table where the records have not been exported yet</string>
        <string>V.Local.sSql.Set("Select * from V_ACH_PAYMENT where EXPORTED &lt;&gt; 'Y'")</string>
        <string>F.ODBC.Connection!con.OpenLocalRecordsetRW("rst",V.Local.sSql)</string>
        <string>F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)</string>
        <string>	'Loop through the records for bulding the detail section of the file</string>
        <string>	F.Intrinsic.Control.DoUntil(V.ODBC.con!rst.EOF,=,True)</string>
        <string>		'Updating the exported flag on record to signal that it has been exported</string>
        <string>		F.ODBC.con!rst.Set!EXPORTED("Y")</string>
        <string>		F.ODBC.con!rst.Update</string>
        <string />
        <string>		'Getting transaction code</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.con!rst.FieldValTrim!BANK_ACCTYPE,=,"C")</string>
        <string>			V.Local.sTransCode.Set("22")</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>			V.Local.sTransCode.Set("32")</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string />
        <string>		'Getting receiving transit number from record</string>
        <string>		F.Intrinsic.String.Left(V.ODBC.con!rst.FieldValTrim!BANK_ROUTING,8,V.Local.sRcvTranNum)</string>
        <string />
        <string>		'Getting tran number to use for trace number</string>
        <string>		F.Intrinsic.String.Left(V.Global.sTranNum,8,V.Local.sTraceTran)</string>
        <string />
        <string>		'Getting check digit from routing number</string>
        <string>		F.Intrinsic.Control.CallSub(Chkdigit,"sTranNum",V.Local.sRcvTranNum)</string>
        <string />
        <string>		'Formatting check amount</string>
        <string>		F.Intrinsic.String.Format(V.ODBC.con!rst.FieldValFloat!CHECK_AMT,"#.00",V.Local.sChkAmt)</string>
        <string>		F.Intrinsic.String.Replace(V.Local.sChkAmt,".","",V.Local.sChkAmt)</string>
        <string>		F.Intrinsic.String.LPad(V.Local.sChkAmt,0,10,V.Local.sChkAmt)</string>
        <string />
        <string>		'Creating trace number</string>
        <string>		F.Intrinsic.Math.Add(V.Local.iTraceNum,1,V.Local.iTraceNum)</string>
        <string>		F.Intrinsic.String.LPad(V.Local.iTraceNum,0,7,V.Local.sTraceNum)</string>
        <string>		F.Intrinsic.String.Concat(V.Local.sTraceTran,V.Local.sTraceNum,V.Local.sTraceNum)</string>
        <string />
        <string>		'Formatting vendor ID and account number</string>
        <string>		F.Intrinsic.String.RPad(V.ODBC.con!rst.FieldValTrim!BANK_ACCOUNT," ",17,V.Local.sVendAccount)</string>
        <string>		F.Intrinsic.String.RPad(V.ODBC.con!rst.FieldValTrim!VENDOR_ID," ",15,V.Local.sVendID)</string>
        <string>		F.Intrinsic.String.RPad(V.ODBC.con!rst.FieldValTrim!VENDOR_NAME," ",22,V.Local.sVendName)</string>
        <string />
        <string>		'Concatenating all values</string>
        <string>		F.Intrinsic.String.Concat("6*!*",V.Local.sTransCode,"*!*",V.Local.sRcvTranNum,"*!*",V.Args.iChkDigit,"*!*",V.Local.sVendAccount,"*!*",V.Local.sChkAmt,"*!*",V.Local.sVendID,"*!*",V.Local.sVendName,"*!**!*0*!*",V.Local.sTraceNum,V.Local.sPosValues)</string>
        <string>		F.Intrinsic.String.Split(V.Local.sPosValues,"*!*",V.Local.sPosValues)</string>
        <string>		F.Intrinsic.String.PositionalString(V.Local.sPosValues,V.Local.iPosDetailLen,V.Local.iPosDetailAlign,V.Local.sDetail)</string>
        <string />
        <string>		'Starting to build file by concantenating all the detail records into string</string>
        <string>		F.Intrinsic.Control.If(V.Local.sFileWrite,=,"")</string>
        <string>			V.Local.sFileWrite.Set(V.Local.sDetail)</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>			F.Intrinsic.String.Concat(V.Local.sFileWrite,V.Ambient.NewLine,V.Local.sDetail,V.Local.sFileWrite)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string />
        <string>		'Total the check amount for the batch record</string>
        <string>		F.Intrinsic.Math.Add(V.Local.fTotalAmt,V.ODBC.con!rst.FieldValFloat!CHECK_AMT,V.Local.fTotalAmt)</string>
        <string />
        <string>		'Totalling the transit numbers to be used to calculate the batch hash and file hash</string>
        <string>		F.Intrinsic.Math.Add(V.Local.sRcvTranNum.Long,V.Local.iHash,V.Local.iHash)</string>
        <string />
        <string>		'Adding 1 to addenda count</string>
        <string>		F.Intrinsic.Math.Add(V.Local.iAddendaCnt,1,V.Local.iAddendaCnt)</string>
        <string />
        <string>		'Adding 1 to block count</string>
        <string>		F.Intrinsic.Math.Add(V.Local.iBlockCnt,1,V.Local.iBlockCnt)</string>
        <string />
        <string>		'Getting invoices from ACH invoice detail table</string>
        <string>		V.Local.sInvoiceList.Set("")</string>
        <string>		F.Intrinsic.String.Concat("Select INV_NO from ACH_DTL_INV where CHKNO = '",V.ODBC.con!rst.FieldValTrim!KEY_NUM,"'",V.Local.sSql)</string>
        <string>		F.ODBC.Connection!con.OpenLocalRecordsetRO("rstInvDtl",V.Local.sSql)</string>
        <string>		F.Intrinsic.Control.DoUntil(V.ODBC.con!rstInvDtl.EOF,=,True)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sInvoiceList,=,"")</string>
        <string>				V.Local.sInvoiceList.Set(V.ODBC.con!rstInvDtl.FieldValTrim!INV_NO)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Intrinsic.String.Concat(V.Local.sInvoiceList,",",V.ODBC.con!rstInvDtl.FieldValTrim!INV_NO,V.Local.sInvoiceList)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>			F.ODBC.con!rstInvDtl.MoveNext</string>
        <string>		F.Intrinsic.Control.Loop</string>
        <string>		F.ODBC.con!rstInvDtl.Close</string>
        <string />
        <string>		'Writing records to UDTs for generating email information</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.con!rst.FieldValTrim!EMAIL_FLAG,=,"Y")</string>
        <string />
        <string>			F.Intrinsic.Control.If(V.uGlobal.uVendor.UBound,=,-1)</string>
        <string>				V.uGlobal.uVendor.Redim(0,0)</string>
        <string>				V.uGlobal.uVendor!Vendor_ID.Set(V.ODBC.con!rst.FieldValTrim!VENDOR_ID)</string>
        <string>				V.uGlobal.uVendor!Vendor_Name.Set(V.ODBC.con!rst.FieldValTrim!VENDOR_NAME)</string>
        <string>				V.uGlobal.uVendor!Invoices.Set(V.Local.sInvoiceList)</string>
        <string>				V.uGlobal.uVendor!Pay_Amount.Set(V.ODBC.con!rst.FieldValFloat!CHECK_AMT)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Intrinsic.Variable.UDTSeek(V.uGlobal.uVendor!Vendor_ID,V.ODBC.con!rst.FieldValTrim!VENDOR_ID,0,V.Local.sRet)</string>
        <string>				F.Intrinsic.Control.If(V.Local.sRet,=,"")</string>
        <string>					V.Local.iUB.Set(V.uGlobal.uVendor.UBound)</string>
        <string>					F.Intrinsic.Math.Add(V.Local.iUB,1,V.Local.iUB)</string>
        <string>					V.uGlobal.uVendor.RedimPreserve(V.uGlobal.uVendor.LBound,V.Local.iUB)</string>
        <string>					V.uGlobal.uVendor(V.Local.iUB)!Vendor_ID.Set(V.ODBC.con!rst.FieldValTrim!VENDOR_ID)</string>
        <string>					V.uGlobal.uVendor(V.Local.iUB)!Vendor_Name.Set(V.ODBC.con!rst.FieldValTrim!VENDOR_NAME)</string>
        <string>					V.uGlobal.uVendor(V.Local.iUB)!Invoices.Set(V.Local.sInvoiceList)</string>
        <string>					V.uGlobal.uVendor(V.Local.iUB)!Pay_Amount.Set(V.ODBC.con!rst.FieldValFloat!CHECK_AMT)</string>
        <string>				F.Intrinsic.Control.Else</string>
        <string>					F.Intrinsic.String.Concat(V.uGlobal.uVendor(V.Local.sRet.Long)!Invoices,",",V.Local.sInvoiceList,V.uGlobal.uVendor(V.Local.sRet.Long)!Invoices)</string>
        <string>					F.Intrinsic.Math.Add(V.uGlobal.uVendor(V.Local.sRet.Long)!Pay_Amount,V.ODBC.con!rst.FieldValFloat!CHECK_AMT,V.uGlobal.uVendor(V.Local.sRet.Long)!Pay_Amount)</string>
        <string>				F.Intrinsic.Control.EndIf</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>		F.ODBC.con!rst.MoveNext</string>
        <string>	F.Intrinsic.Control.Loop</string>
        <string>	F.ODBC.con!rst.Close</string>
        <string />
        <string>	'Format batch and file total</string>
        <string>	F.Intrinsic.String.Format(V.Local.fTotalAmt,"#.00",V.Local.sTotalAmt)</string>
        <string>	F.Intrinsic.String.Replace(V.Local.sTotalAmt,".","",V.Local.sTotalAmt)</string>
        <string>	F.Intrinsic.String.LPad(V.Local.sTotalAmt,0,10,V.Local.sBalAmt)</string>
        <string>	F.Intrinsic.String.LPad(V.Local.sTotalAmt,0,12,V.Local.sTotalAmt)</string>
        <string />
        <string>	'Checking to see if balanced option was selected or not</string>
        <string>	F.Intrinsic.Control.If(V.Global.bBal,=,True)</string>
        <string>		'Getting tran number to use for trace number</string>
        <string>		F.Intrinsic.String.Left(V.Global.sTranNum,8,V.Local.sTraceTran)</string>
        <string />
        <string>		'Caclulating check digit for balancing record</string>
        <string>		F.Intrinsic.Control.CallSub(Chkdigit,"sTranNum",V.Global.sTranNum)</string>
        <string />
        <string>		'Creating trace number for balancing record</string>
        <string>		F.Intrinsic.Math.Add(V.Local.iTraceNum,1,V.Local.iTraceNum)</string>
        <string>		F.Intrinsic.String.LPad(V.Local.iTraceNum,0,7,V.Local.sTraceNum)</string>
        <string>		F.Intrinsic.String.Concat(V.Local.sTraceTran,V.Local.sTraceNum,V.Local.sTraceNum)</string>
        <string />
        <string>		'Formatting company account number and id</string>
        <string>		F.Intrinsic.String.RPad(V.Global.sAcctNum," ",17,V.Global.sAcctNum)</string>
        <string>		F.Intrinsic.String.RPad(V.Global.sCompID," ",15,V.Global.sCompID)</string>
        <string>		F.Intrinsic.String.RPad(V.Global.sCompName," ",22,V.Global.sCompName)</string>
        <string />
        <string>		'Formatting company name</string>
        <string>		F.Intrinsic.String.Replace(V.Global.sCompName,"(","",V.Local.sCompName)</string>
        <string>		F.Intrinsic.String.Replace(V.Local.sCompName,")","",V.Local.sCompName)</string>
        <string>		F.Intrinsic.String.Replace(V.Local.sCompName,"-","",V.Local.sCompName)</string>
        <string>		F.Intrinsic.String.Replace(V.Local.sCompName,"/","",V.Local.sCompName)</string>
        <string>		F.Intrinsic.String.Replace(V.Local.sCompName,"\","",V.Local.sCompName)</string>
        <string>		F.Intrinsic.String.Left(V.Local.sCompName,22,V.Local.sCompName)</string>
        <string />
        <string>		'commented out the section of code since the customer doesn't need the balancing record</string>
        <string>'		'Concatenating values for balancing record</string>
        <string>'		F.Intrinsic.String.Concat("6*!*27*!*",V.Global.sTranNum,"*!*",V.Args.iChkDigit,"*!*",V.Global.sAcctNum,"*!*",V.Local.sBalAmt,"*!*",V.Global.sCompID,"*!*",V.Global.sCompName,"*!**!*0*!*",V.Local.sTraceNum,V.Local.sPosValues)</string>
        <string>'		F.Intrinsic.String.Split(V.Local.sPosValues,"*!*",V.Local.sPosValues)</string>
        <string>'		F.Intrinsic.String.PositionalString(V.Local.sPosValues,V.Local.iPosDetailLen,V.Local.iPosDetailAlign,V.Local.sDetail)</string>
        <string>'		F.Intrinsic.String.Concat(V.Local.sFileWrite,V.Ambient.NewLine,V.Local.sDetail,V.Local.sFileWrite)</string>
        <string />
        <string>		'Adding balancing record into hash</string>
        <string>		F.Intrinsic.Math.Add(V.Global.sTranNum.Long,V.Local.iHash,V.Local.iHash)</string>
        <string />
        <string>		'Fromatting hash for batch and file</string>
        <string>		F.Intrinsic.String.Right(V.Local.iHash,10,V.Local.sHash)</string>
        <string>		F.Intrinsic.String.LPad(V.Local.sHash,0,10,V.Local.sHash)</string>
        <string />
        <string>		'Adding 1 to addenda count and formatting</string>
        <string>		F.Intrinsic.Math.Add(V.Local.iAddendaCnt,1,V.Local.iAddendaCnt)</string>
        <string>		F.Intrinsic.String.LPad(V.Local.iAddendaCnt,0,6,V.Local.sAddendaCnt)</string>
        <string />
        <string>		'Adding 1 to block count</string>
        <string>		F.Intrinsic.Math.Add(V.Local.iBlockCnt,1,V.Local.iBlockCnt)</string>
        <string />
        <string>		'Concantenating values for batch trailer record</string>
        <string>		V.Local.sClass.Set("200")</string>
        <string>		V.Local.sPosValues.Redim(0,0)</string>
        <string>		F.Intrinsic.String.Concat("8*!*",V.Local.sClass,"*!*",V.Local.sAddendaCnt,"*!*",V.Local.sHash,"*!*",V.Local.sTotalAmt,"*!*",V.Local.sTotalAmt,"*!*",V.Global.sCompID,"*!**!*",V.Global.sImmOriTranTrim,"*!*0000001",V.Local.sPosValues)</string>
        <string>		F.Intrinsic.String.Split(V.Local.sPosValues,"*!*",V.Local.sPosValues)</string>
        <string>		F.Intrinsic.String.PositionalString(V.Local.sPosValues,V.Local.iPosBatchTrlLen,V.Local.iPosBatchTrlAlign,V.Local.sBatchTrl)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string />
        <string>		'Fromatting hash for batch and file</string>
        <string>		F.Intrinsic.String.Right(V.Local.iHash,10,V.Local.sHash)</string>
        <string>		F.Intrinsic.String.LPad(V.Local.sHash,0,10,V.Local.sHash)</string>
        <string />
        <string>		'Adding formatting to addenda count</string>
        <string>		F.Intrinsic.String.LPad(V.Local.iAddendaCnt,0,6,V.Local.sAddendaCnt)</string>
        <string />
        <string>		'Concantenating values for batch trailer record</string>
        <string>		V.Local.sClass.Set("220")</string>
        <string>		V.Local.sPosValues.Redim(0,0)</string>
        <string>		F.Intrinsic.String.Concat("8*!*",V.Local.sClass,"*!*",V.Local.sAddendaCnt,"*!*",V.Local.sHash,"*!*000000000000*!*",V.Local.sTotalAmt,"*!*",V.Global.sCompID,"*!**!*",V.Global.sImmOriTranTrim,"*!*0000001",V.Local.sPosValues)</string>
        <string>		F.Intrinsic.String.Split(V.Local.sPosValues,"*!*",V.Local.sPosValues)</string>
        <string>		F.Intrinsic.String.PositionalString(V.Local.sPosValues,V.Local.iPosBatchTrlLen,V.Local.iPosBatchTrlAlign,V.Local.sBatchTrl)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Concatenating the batch trailer onto the write string</string>
        <string>	F.Intrinsic.String.Concat(V.Local.sFileWrite,V.Ambient.NewLine,V.Local.sBatchTrl,V.Local.sFileWrite)</string>
        <string />
        <string>	'Creating entry description for batch header</string>
        <string>	F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonth)</string>
        <string>	F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDay)</string>
        <string>	F.Intrinsic.String.Concat("Pay ",V.Local.iMonth.String,V.Local.iDay.String,V.Local.sEntryDesc)</string>
        <string />
        <string>	'Creating entry date</string>
        <string>	F.Intrinsic.String.Format(V.Ambient.Date,"YYMMDD",V.Local.sEntryDate)</string>
        <string>	V.Local.sBlankDate.Set("      ")</string>
        <string>	F.Intrinsic.String.Format(V.global.dEffectiveDate,"YYMMDD",V.Local.sEffectiveDate)</string>
        <string />
        <string>	'Formatting company name</string>
        <string>	F.Intrinsic.String.Replace(V.Global.sCompName,"(","",V.Local.sCompName)</string>
        <string>	F.Intrinsic.String.Replace(V.Local.sCompName,")","",V.Local.sCompName)</string>
        <string>	F.Intrinsic.String.Replace(V.Local.sCompName,"-","",V.Local.sCompName)</string>
        <string>	F.Intrinsic.String.Replace(V.Local.sCompName,"/","",V.Local.sCompName)</string>
        <string>	F.Intrinsic.String.Replace(V.Local.sCompName,"\","",V.Local.sCompName)</string>
        <string>	F.Intrinsic.String.Left(V.Local.sCompName,16,V.Local.sCompName)</string>
        <string />
        <string>	'Concatenating the batch header values</string>
        <string>	V.Local.sPosValues.Redim(0,0)</string>
        <string>	F.Intrinsic.String.Concat("5*!*",V.Local.sClass,"*!*",V.Local.sCompName,"*!*Vendor Payments*!*",V.Global.sCompID,"*!*CCD*!*Vendor Pmts*!*",V.Local.sEffectiveDate,"*!*",V.Local.sBlankDate,"*!**!*1*!*",V.Global.sTranNum,"*!*0000001",V.Local.sPosValues)</string>
        <string>	F.Intrinsic.String.Split(V.Local.sPosValues,"*!*",V.Local.sPosValues)</string>
        <string>	F.Intrinsic.String.PositionalString(V.Local.sPosValues,V.Local.iPosBatchHdrLen,V.Local.iPosBatchHdrAlign,V.Local.sBatchHdr)</string>
        <string />
        <string>	'Concatenating the batch header onto write string</string>
        <string>	F.Intrinsic.String.Concat(,V.Local.sBatchHdr,V.Ambient.NewLine,V.Local.sFileWrite,V.Local.sFileWrite)</string>
        <string />
        <string>	'Adding 4 to block count to cover batch header, trailer and file header, trailer</string>
        <string>	F.Intrinsic.Math.Add(V.Local.iBlockCnt,4,V.Local.iBlockCnt)</string>
        <string>	F.Intrinsic.Math.Mod(V.Local.iBlockCnt,10,V.Local.iMod)</string>
        <string>	F.Intrinsic.Control.If(V.Local.iMod,&gt;,0)</string>
        <string>		F.Intrinsic.Math.Sub(10,V.Local.iMod,V.Local.iMod)</string>
        <string>		F.Intrinsic.Math.Add(V.Local.iBlockCnt,V.Local.iMod,V.Local.iBlockCnt)</string>
        <string>		F.Intrinsic.Math.Div(V.Local.iBlockCnt,10,V.Local.iBlockCnt)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		F.Intrinsic.Math.Div(V.Local.iBlockCnt,10,V.Local.iBlockCnt)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	F.Intrinsic.String.LPad(V.Local.iBlockCnt,0,"6",V.Local.sBlockCnt)</string>
        <string />
        <string>	'Padding the Hash with zeros</string>
        <string>	F.Intrinsic.String.LPad(V.Local.sHash,0,10,V.Local.sHash)</string>
        <string>	F.Intrinsic.String.LPad(V.Local.sAddendaCnt,0,8,V.Local.sAddendaCnt)</string>
        <string />
        <string>	'Concatenating the file trailer values</string>
        <string>	V.Local.sPosValues.Redim(0,0)</string>
        <string>	F.Intrinsic.Control.If(V.Global.bBal,=,True)</string>
        <string>		F.Intrinsic.String.Concat("9*!*000001*!*",V.Local.sBlockCnt,"*!*",V.Local.sAddendaCnt,"*!*",V.Local.sHash,"*!*",V.Local.sTotalAmt,"*!*",V.Local.sTotalAmt,"*!*",V.Local.sPosValues)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		F.Intrinsic.String.Concat("9*!*000001*!*",V.Local.sBlockCnt,"*!*",V.Local.sAddendaCnt,"*!*",V.Local.sHash,"*!*000000000000*!*",V.Local.sTotalAmt,"*!*",V.Local.sPosValues)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.String.Split(V.Local.sPosValues,"*!*",V.Local.sPosValues)</string>
        <string>	F.Intrinsic.String.PositionalString(V.Local.sPosValues,V.Local.iPosFileTrlLen,V.Local.iPosFileTrlAlign,V.Local.sFileTrl)</string>
        <string />
        <string>	'Concatenating the file trailer onto the write string</string>
        <string>	F.Intrinsic.String.Concat(V.Local.sFileWrite,V.Ambient.NewLine,V.Local.sFileTrl,V.Local.sFileWrite)</string>
        <string />
        <string>	'Fromatting time for file header</string>
        <string>	F.Intrinsic.String.Format(V.Ambient.Time,"HHNN",V.Local.sTime)</string>
        <string />
        <string>	'Checking to see if alternate immediate destination was specified</string>
        <string>	V.Local.sPosValues.Redim(0,0)</string>
        <string />
        <string>	'Concatenating the file header values</string>
        <string>	F.Intrinsic.String.Concat("1*!*01*!*"," ",V.Global.sImmDestTran,"*!*",V.Global.sImmOriTran,"*!*",V.Local.sEntryDate,"*!*",V.Local.sTime,"*!*A*!*094*!*10*!*1*!*",V.Global.sImmDest,"*!*",V.Global.sImmOri,"*!*",V.Local.sPosValues)</string>
        <string>	F.Intrinsic.String.Split(V.Local.sPosValues,"*!*",V.Local.sPosValues)</string>
        <string>	F.Intrinsic.String.PositionalString(V.Local.sPosValues,V.Local.iPosFileHdrLen,V.Local.iPosFileHdrAlign,V.Local.sFileHdr)</string>
        <string />
        <string>	'Concatenating the file header onto the write string</string>
        <string>	F.Intrinsic.String.Concat(V.Local.sFileHdr,V.Ambient.NewLine,V.Local.sFileWrite,V.Local.sFileWrite)</string>
        <string />
        <string>	'Calcaulting 9 fill records needed based on mod 10</string>
        <string>	V.Local.sFill.Set("9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999")</string>
        <string>	F.Intrinsic.Control.If(V.Local.iMod,&gt;,0)</string>
        <string>		V.Local.i.Set(1)</string>
        <string>		F.Intrinsic.Control.DoUntil(V.Local.i,&gt;,V.Local.iMod)</string>
        <string>			'Concatenating on 9 fill records</string>
        <string>			F.Intrinsic.String.Concat(V.Local.sFileWrite,V.Ambient.NewLine,V.Local.sFill,V.Local.sFileWrite)</string>
        <string>			F.Intrinsic.Math.Add(V.Local.i,1,V.Local.i)</string>
        <string>		F.Intrinsic.Control.Loop</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.CallSub(Filesave,"sFileWrite",V.Local.sFileWrite)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("BuildFile_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.BuildFile.End</string>
        <string />
        <string>Program.Sub.ChkDigit.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("ChkDigit_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sTranNum.Declare(String)</string>
        <string>V.Local.iChkDigit.Declare(Long)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.fRnd.Declare(Float)</string>
        <string />
        <string>'Calculating the check digit using a mod 10</string>
        <string>F.Intrinsic.String.LimitSplit(V.Args.sTranNum,1,V.Local.sTranNum)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(0).Long,3,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(1).Long,7,V.Local.i)</string>
        <string>F.Intrinsic.Math.Add(V.Local.iChkDigit,V.Local.i,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(2).Long,1,V.Local.i)</string>
        <string>F.Intrinsic.Math.Add(V.Local.iChkDigit,V.Local.i,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(3).Long,3,V.Local.i)</string>
        <string>F.Intrinsic.Math.Add(V.Local.iChkDigit,V.Local.i,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(4).Long,7,V.Local.i)</string>
        <string>F.Intrinsic.Math.Add(V.Local.iChkDigit,V.Local.i,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(5).Long,1,V.Local.i)</string>
        <string>F.Intrinsic.Math.Add(V.Local.iChkDigit,V.Local.i,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(6).Long,3,V.Local.i)</string>
        <string>F.Intrinsic.Math.Add(V.Local.iChkDigit,V.Local.i,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mult(V.Local.sTranNum(7).Long,7,V.Local.i)</string>
        <string>F.Intrinsic.Math.Add(V.Local.iChkDigit,V.Local.i,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Math.Mod(V.Local.iChkDigit,10,V.Local.fRnd)</string>
        <string>F.Intrinsic.Control.If(V.Local.fRnd,=,0)</string>
        <string>	F.Intrinsic.Math.Sub(V.Local.iChkDigit,V.Local.iChkDigit,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Control.Else</string>
        <string>	F.Intrinsic.Math.Add(V.Local.iChkDigit,10,V.Local.i)</string>
        <string>	F.Intrinsic.Math.IDiv(V.Local.i,10,V.Local.i)</string>
        <string>	F.Intrinsic.Math.Mult(V.Local.i,10,V.Local.i)</string>
        <string>	F.Intrinsic.Math.Sub(V.Local.i,V.Local.iChkDigit,V.Local.iChkDigit)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Variable.AddRV("iChkDigit",V.Local.iChkDigit)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("ChkDigit_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.ChkDigit.End</string>
        <string />
        <string>Program.Sub.FileSave.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("FileSave_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string />
        <string>F.Intrinsic.UI.ShowSaveFileDialog("","txt|*.txt",V.Local.sFile)</string>
        <string>F.Intrinsic.Control.If(V.Local.sFile,&lt;&gt;,"***CANCEL***")</string>
        <string>	F.Intrinsic.File.String2File(V.Local.sFile,V.Args.sFileWrite)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.CallSub(Emailnotifications)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("FileSave_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.FileSave.End</string>
        <string />
        <string>Program.Sub.f_contactlist_unload.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_contactlist_unload_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>Gui.F_ContactList..Visible(False)</string>
        <string>V.Global.bBusy.Set(False)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("f_contactlist_unload_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.f_contactlist_unload.End</string>
        <string />
        <string>Program.Sub.cmdadd_click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdadd_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sEmail.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.bChk.Declare(Boolean)</string>
        <string />
        <string>V.Local.bChk.Set(False)</string>
        <string>'Exit if no email selected or enetered</string>
        <string>F.Intrinsic.Control.If(V.Screen.F_ContactList!txtEmail.Text,=,"")</string>
        <string>	F.Intrinsic.UI.Msgbox("Please enter a recipient email address..","Invalid Email")</string>
        <string>	Gui.F_ContactList.txtEmail.SetFocus</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Checking for valid email</string>
        <string>V.Local.sEmail.Set(V.Screen.F_ContactList!txtEmail.Text)</string>
        <string>F.Intrinsic.String.Split(V.Local.sEmail.Trim,"@",V.Local.sEmail)</string>
        <string>F.Intrinsic.Control.If(V.Local.sEmail.UBound,&lt;&gt;,1)</string>
        <string>	F.Intrinsic.UI.Msgbox("Invalid email address.","Invalid Email")</string>
        <string>	Gui.F_ContactList.txtEmail.SetFocus</string>
        <string>	Gui.F_ContactList.txtEmail.SelectAll</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Else</string>
        <string>	F.Intrinsic.String.Split(V.Local.sEmail(1),".",V.Local.sEmail)</string>
        <string>	F.Intrinsic.Control.If(V.Local.sEmail.UBound,&lt;,1)</string>
        <string>		F.Intrinsic.UI.Msgbox("Invalid email address.","Invalid Email")</string>
        <string>		Gui.F_ContactList.txtEmail.SetFocus</string>
        <string>		Gui.F_ContactList.txtEmail.SelectAll</string>
        <string>		F.Intrinsic.Control.ExitSub</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Search for email address in memory array  to avoid duplicates</string>
        <string>F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)</string>
        <string>	F.Intrinsic.Control.If(V.Screen.F_ContactList!txtEmail.Text,=,V.Global.sList(v.Local.i))</string>
        <string>		V.Local.bChk.Set(True)</string>
        <string>		F.Intrinsic.Control.ExitFor(V.Local.i)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>'If email not found in list, add it to memory array</string>
        <string>F.Intrinsic.Control.If(V.Local.bChk,=,False)</string>
        <string>	F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)</string>
        <string>		V.Global.sList.Redim(0,0)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.Global.sList.RedimPreserve(1)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	V.Global.sList(v.Global.sList.UBound).Set(V.Screen.F_ContactList!txtEmail.Text)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Fill list from memory array</string>
        <string>Gui.F_ContactList.txtEmail.Text("")</string>
        <string>F.Intrinsic.Control.CallSub("FillList")</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdadd_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.cmdadd_click.End</string>
        <string />
        <string>Program.Sub.cmdremove_click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdremove_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.iStart.Declare(Long)</string>
        <string>V.Local.iEnd.Declare(Long)</string>
        <string>V.Local.iTemp.Declare(Long)</string>
        <string>V.Local.bFound.Declare(Boolean)</string>
        <string />
        <string>'Exit if no email selected in list</string>
        <string>F.Intrinsic.Control.If(V.Screen.F_ContactList!lstEmails.Text,=,"")</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Search memory array for ordinal of selected email</string>
        <string>F.Intrinsic.Control.For(V.Local.iStart,0,V.Global.sList.UBound,1)</string>
        <string>	F.Intrinsic.Control.If(V.Screen.F_ContactList!lstEmails.Text,=,V.Global.sList(v.Local.iStart))</string>
        <string>		V.Local.bFound.Set(True)</string>
        <string>		F.Intrinsic.Control.ExitFor(V.Local.iStart)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.Next(V.Local.iStart)</string>
        <string />
        <string>'Shift memory array to remove selected email</string>
        <string>F.Intrinsic.Math.Sub(V.Global.sList.UBound,1,V.Local.iEnd)</string>
        <string>F.Intrinsic.Control.For(V.Local.i,V.Local.iStart,V.Local.iEnd,1)</string>
        <string>	F.Intrinsic.Math.Add(V.Local.i,1,V.Local.iTemp)</string>
        <string>	V.Global.sList(v.Local.i).set(V.Global.sList(v.Local.iTemp))</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>F.Intrinsic.Control.If(V.Global.sList.UBound,=,0)</string>
        <string>	V.Global.sList.Redim(-1,-1)</string>
        <string>F.Intrinsic.Control.else</string>
        <string>	V.Global.sList.RedimPreserve(0,V.Local.iEnd)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Fill list from memory array</string>
        <string>F.Intrinsic.Control.CallSub("FillList")</string>
        <string />
        <string>'Clear email selection</string>
        <string>Gui.F_ContactList.ddlContact.ListIndex(0)</string>
        <string>Gui.F_ContactList.txtEmail.Text("")</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdremove_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.cmdremove_click.End</string>
        <string />
        <string>Program.Sub.cmdsend_click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdsend_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sEmail.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string />
        <string>'Exit if no email selected or enetered</string>
        <string>F.Intrinsic.Control.If(V.Screen.F_ContactList!txtReplyEmail.Text,=,"")</string>
        <string>	F.Intrinsic.UI.Msgbox("No reply to address entered.","Invalid Email")</string>
        <string>	Gui.F_ContactList.txtReplyEmail.SetFocus</string>
        <string>	Gui.F_ContactList.txtReplyEmail.SelectAll</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Checking for valid email</string>
        <string>V.Local.sEmail.Set(V.Screen.F_ContactList!txtReplyEmail.Text)</string>
        <string>F.Intrinsic.String.Split(V.Local.sEmail.Trim,"@",V.Local.sEmail)</string>
        <string>F.Intrinsic.Control.If(V.Local.sEmail.UBound,&lt;&gt;,1)</string>
        <string>	F.Intrinsic.UI.Msgbox("Invalid reply to email address.","Invalid Email")</string>
        <string>	Gui.F_ContactList.txtReplyEmail.SetFocus</string>
        <string>	Gui.F_ContactList.txtReplyEmail.SelectAll</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Else</string>
        <string>	F.Intrinsic.String.Split(V.Local.sEmail(1),".",V.Local.sEmail)</string>
        <string>	F.Intrinsic.Control.If(V.Local.sEmail.UBound,&lt;&gt;,1)</string>
        <string>		F.Intrinsic.UI.Msgbox("Invalid reply to email address.","Invalid Email")</string>
        <string>		Gui.F_ContactList.txtReplyEmail.SetFocus</string>
        <string>		Gui.F_ContactList.txtReplyEmail.SelectAll</string>
        <string>		F.Intrinsic.Control.ExitSub</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Checking to make sure recipient list isn't blank</string>
        <string>F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)</string>
        <string>	F.Intrinsic.UI.Msgbox("Please enter at least one recipient email.","Invalid Email")</string>
        <string>	Gui.F_ContactList.txtEmail.SetFocus</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>Gui.F_ContactList..Visible(False)</string>
        <string />
        <string>F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)</string>
        <string>	F.Global.Messaging.CreateEMMessage(V.Global.sList(V.Local.i),"",V.Screen.F_ContactList!txtReplyEmail.Text,"",V.Screen.F_ContactList!txtSubject.Text,V.Screen.F_ContactList!mltxtBody.Text)</string>
        <string>	F.Intrinsic.UI.Sleep(1)</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>V.Global.bBusy.Set(False)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdsend_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.cmdsend_click.End</string>
        <string />
        <string>Program.Sub.PopContacts.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("PopContacts_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string>V.Local.sTemp.Declare(String)</string>
        <string />
        <string>''Add blank item to drop down list</string>
        <string>'Gui.F_ContactList.ddlContact.AddItem("")</string>
        <string />
        <string>'Fill drop down list with contacts/emails for the customer on the order</string>
        <string>F.Intrinsic.String.Concat("Select Name, Alt_ID, Email1, Email2, Name_Last, Name_First from Contact where Cust='",V.Global.sVendorID,"' and Type = 'V' order by Name_Last, Name_First",V.Local.sSQL)</string>
        <string>F.ODBC.Connection!con.OpenRecordsetRO("rst",V.Local.sSQL)</string>
        <string>F.Intrinsic.Control.DoUntil(V.ODBC.con!rst.EOF,=,True)</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.FieldValTrim!Email1,&lt;&gt;,"")</string>
        <string>		F.Intrinsic.string.Concat(V.ODBC.con!rst.FieldValTrim!Name," &lt;",V.ODBC.con!rst.FieldValTrim!Email1,"&gt;",V.Local.sTemp)</string>
        <string>		Gui.F_ContactList.ddlContact.AddItem(V.Local.sTemp)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.FieldValTrim!Email2,&lt;&gt;,"")</string>
        <string>		F.Intrinsic.string.Concat(V.ODBC.con!rst.FieldValTrim!Name," &lt;",V.ODBC.con!rst.FieldValTrim!Email2,"&gt;",V.Local.sTemp)</string>
        <string>		Gui.F_ContactList.ddlContact.AddItem(V.Local.sTemp)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	F.ODBC.con!rst.MoveNext</string>
        <string>F.Intrinsic.Control.Loop</string>
        <string>F.ODBC.con!rst.Close</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("PopContacts_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.PopContacts.End</string>
        <string />
        <string>Program.Sub.EmailNotifications.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("EmailNotifications_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.ia.Declare(Long)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.sReplyEmail.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.sEmail.Declare(String)</string>
        <string>V.Local.bChk.Declare(Boolean)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.uGlobal.uVendor.UBound,=,-1)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.For(V.Local.i,V.uGlobal.uVendor.LBound,V.uGlobal.uVendor.UBound,1)</string>
        <string>	V.Local.bChk.Set(False)</string>
        <string>	V.Global.sVendorID.Set(V.uGlobal.uVendor(V.Local.i)!Vendor_ID)</string>
        <string>	Gui.F_ContactList.ddlContact.ClearItems</string>
        <string>	Gui.F_ContactList.lstEmails.ClearItems</string>
        <string>	Gui.F_ContactList.txtEmail.Text("")</string>
        <string>	Gui.F_ContactList.txtSubject.Text("")</string>
        <string>	Gui.F_ContactList.mltxtBody.Text("")</string>
        <string>	F.Intrinsic.Control.CallSub(Popcontacts)</string>
        <string>	Gui.F_ContactList.txtSubject.Text("ACH Payment Notification")</string>
        <string>	F.Intrinsic.String.Concat("Company: ",V.uGlobal.uVendor(V.Local.i)!Vendor_Name,V.Ambient.NewLine,"Invoices: ",V.uGlobal.uVendor(V.Local.i)!Invoices,V.Ambient.NewLine,"Payment Amount: ",V.uGlobal.uVendor(V.Local.i)!Pay_Amount,V.Local.sText)</string>
        <string>	Gui.F_ContactList.mltxtBody.Text(V.Local.sText)</string>
        <string>	F.Global.Security.GetUserEmail(V.Caller.User,V.Caller.CompanyCode,V.Local.sReplyEmail)</string>
        <string>	Gui.F_ContactList.txtReplyEmail.Text(V.Local.sReplyEmail)</string>
        <string>	F.Intrinsic.String.Concat("ACH Email Notificiation For ",V.uGlobal.uVendor(V.Local.i)!Vendor_Name,V.Local.sText)</string>
        <string>	Gui.F_ContactList..Caption(V.Local.sText)</string>
        <string>	V.Global.sList.Redim(-1,-1)</string>
        <string>	Gui.F_ContactList..Show</string>
        <string />
        <string>	F.Intrinsic.String.Concat("Select EMAIL from V_VENDOR_ADDL where VENDOR = '",V.uGlobal.uVendor(V.Local.i)!Vendor_ID.Trim,"'",V.Local.sSql)</string>
        <string>	F.ODBC.Connection!con.OpenLocalRecordsetRO("rst",V.Local.sSql)</string>
        <string>	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,&lt;&gt;,True)</string>
        <string>		V.Local.sEmail.Set(V.ODBC.con!rst.FieldValTrim!EMAIL)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	F.Intrinsic.Control.If(V.Local.sEmail,&lt;&gt;,"")</string>
        <string>		Gui.F_ContactList.lstEmails.AddItem(V.ODBC.con!rst.FieldValTrim!EMAIL)</string>
        <string>		'Search for email address in memory array  to avoid duplicates</string>
        <string>		F.Intrinsic.Control.For(V.Local.ia,0,V.Global.sList.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sEmail,=,V.Global.sList(v.Local.ia))</string>
        <string>				V.Local.bChk.Set(True)</string>
        <string>				F.Intrinsic.Control.ExitFor(V.Local.ia)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.Next(V.Local.ia)</string>
        <string />
        <string>		'If email not found in list, add it to memory array</string>
        <string>		F.Intrinsic.Control.If(V.Local.bChk,=,False)</string>
        <string>			F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)</string>
        <string>				V.Global.sList.Redim(0,0)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				V.Global.sList.RedimPreserve(1)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>			V.Global.sList(v.Global.sList.UBound).Set(V.Local.sEmail)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	F.ODBC.con!rst.Close</string>
        <string>	V.Global.bBusy.Set(True)</string>
        <string>	F.Intrinsic.Control.CallSub(Wait)</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>F.Intrinsic.Control.CallSub(Unload)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("EmailNotifications_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.EmailNotifications.End</string>
        <string />
        <string>Program.Sub.FillList.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("FillList_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string />
        <string>Gui.F_ContactList.lstEmails.ClearItems</string>
        <string />
        <string>'Fill listbox from memory array</string>
        <string>F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)</string>
        <string>	Gui.F_ContactList.lstEmails.AddItem(V.Global.sList(v.Local.i))</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("FillList_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.FillList.End</string>
        <string />
        <string>Program.Sub.ddlcontact_click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("ddlcontact_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.iPos.Declare(Long)</string>
        <string>V.Local.sEmail.Declare(String)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Screen.F_ContactList!ddlContact.Text,&lt;&gt;,"")</string>
        <string>	'Select contact from drop down list - populate textbox</string>
        <string>	F.Intrinsic.String.Instr(V.Screen.F_ContactList!ddlContact.Text,"&lt;",V.Local.ipos)</string>
        <string>	F.Intrinsic.String.mid(V.Screen.F_ContactList!ddlContact.Text,V.Local.iPos,V.Local.sEmail)</string>
        <string>	F.Intrinsic.String.Replace(V.Local.sEmail,"&lt;","",V.Local.sEmail)</string>
        <string>	F.Intrinsic.String.Replace(V.Local.sEmail,"&gt;","",V.Local.sEmail)</string>
        <string>	Gui.F_ContactList.txtEmail.Text(V.Local.sEmail)</string>
        <string>F.Intrinsic.Control.Else</string>
        <string>	Gui.F_ContactList.txtEmail.Text("")</string>
        <string>F.Intrinsic.Control.endif</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("ddlcontact_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.ddlcontact_click.End</string>
        <string />
        <string>Program.Sub.Wait.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Wait_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.Intrinsic.Control.DoUntil(V.Global.bBusy,=,False)</string>
        <string>	F.Intrinsic.UI.Sleep(1)</string>
        <string>	F.Intrinsic.Control.DoEvents</string>
        <string>F.Intrinsic.Control.Loop</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Wait_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.Wait.End</string>
        <string />
        <string>Program.Sub.F_Date_UnLoad.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("F_Date_UnLoad_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'set date</string>
        <string>V.Global.dEffectiveDate.Set(V.Screen.F_Date!dtpEffectiveDate.Value)</string>
        <string>GUI.F_Date..Visible(False)</string>
        <string>'then call sub to run program</string>
        <string>F.Intrinsic.Control.CallSub(Opchk)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("F_Date_UnLoad_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.F_Date_UnLoad.End</string>
        <string />
        <string>Program.Sub.dtpEffectiveDate_Change.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("dtpEffectiveDate_Change_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'check the date choosen is greater than today</string>
        <string>V.Local.iRet.Declare(Long)</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Screen.F_Date!dtpEffectiveDate.Value, &lt;=, V.Ambient.Date)</string>
        <string>	F.Intrinsic.UI.Msgbox("Using the current date or prior date may result in the transaction being classified as 'Same Date ACH' and can be subject to fees charged by the involved financial institutions. Accept these conditions?","Date Warning",4, V.Local.iRet)</string>
        <string>	Function.Intrinsic.Control.If(V.Local.iRet, =, 6)</string>
        <string>		F.Intrinsic.Control.CallSub(f_date_unload)</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("dtpEffectiveDate_Change_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: ATG_GCG_4593_M&amp;T_ACH_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.dtpEffectiveDate_Change.End</string>
        <string />
        <string>Program.Sub.Comments.Start</string>
        <string>${$0$}$NACHA$}$MLA$}$1/26/2012$}$False</string>
        <string>${$3$}$0$}$$}$-1$}$-1$}$$}$1/1/1900$}$Original customer was SMS Millcraft.</string>
        <string />
        <string>This is a re-write of the original script due to many inconsistencies with the original.</string>
        <string>Program.Sub.Comments.End</string>
        <string />
        <string />
      </Lines>
    </TextStrings>
  </TextSource>
  <Scrolling>
    <WindowOriginY>1031</WindowOriginY>
    <Options>None</Options>
  </Scrolling>
  <Outlining>
    <AllowOutlining>true</AllowOutlining>
    <ImageSize>8</ImageSize>
    <Ranges>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>0</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>117</Y>
        </EndPoint>
        <Text>Program.Sub.ScreenSU</Text>
        <DisplayText>Program.Sub.ScreenSU</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>119</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>147</Y>
        </EndPoint>
        <Text>Program.Sub.Preflight</Text>
        <DisplayText>Program.Sub.Preflight</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>149</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>174</Y>
        </EndPoint>
        <Text>Program.Sub.Main</Text>
        <DisplayText>Program.Sub.Main</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>176</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>196</Y>
        </EndPoint>
        <Text>Program.Sub.Unload</Text>
        <DisplayText>Program.Sub.Unload</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>198</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>330</Y>
        </EndPoint>
        <Text>Program.Sub.OpChk</Text>
        <DisplayText>Program.Sub.OpChk</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>332</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>702</Y>
        </EndPoint>
        <Text>Program.Sub.BuildFile</Text>
        <DisplayText>Program.Sub.BuildFile</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>704</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>751</Y>
        </EndPoint>
        <Text>Program.Sub.ChkDigit</Text>
        <DisplayText>Program.Sub.ChkDigit</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>753</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>776</Y>
        </EndPoint>
        <Text>Program.Sub.FileSave</Text>
        <DisplayText>Program.Sub.FileSave</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>778</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>796</Y>
        </EndPoint>
        <Text>Program.Sub.f_contactlist_unload</Text>
        <DisplayText>Program.Sub.f_contactlist_unload</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>798</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>865</Y>
        </EndPoint>
        <Text>Program.Sub.cmdadd_click</Text>
        <DisplayText>Program.Sub.cmdadd_click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>867</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>919</Y>
        </EndPoint>
        <Text>Program.Sub.cmdremove_click</Text>
        <DisplayText>Program.Sub.cmdremove_click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>921</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>979</Y>
        </EndPoint>
        <Text>Program.Sub.cmdsend_click</Text>
        <DisplayText>Program.Sub.cmdsend_click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>981</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1017</Y>
        </EndPoint>
        <Text>Program.Sub.PopContacts</Text>
        <DisplayText>Program.Sub.PopContacts</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>1019</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1098</Y>
        </EndPoint>
        <Text>Program.Sub.EmailNotifications</Text>
        <DisplayText>Program.Sub.EmailNotifications</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>1100</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1123</Y>
        </EndPoint>
        <Text>Program.Sub.FillList</Text>
        <DisplayText>Program.Sub.FillList</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>1125</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1153</Y>
        </EndPoint>
        <Text>Program.Sub.ddlcontact_click</Text>
        <DisplayText>Program.Sub.ddlcontact_click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>1155</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1175</Y>
        </EndPoint>
        <Text>Program.Sub.Wait</Text>
        <DisplayText>Program.Sub.Wait</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>1177</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1199</Y>
        </EndPoint>
        <Text>Program.Sub.F_Date_UnLoad</Text>
        <DisplayText>Program.Sub.F_Date_UnLoad</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>1201</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1227</Y>
        </EndPoint>
        <Text>Program.Sub.dtpEffectiveDate_Change</Text>
        <DisplayText>Program.Sub.dtpEffectiveDate_Change</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>1229</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>1234</Y>
        </EndPoint>
        <Text>Program.Sub.Comments</Text>
        <DisplayText>Program.Sub.Comments</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
    </Ranges>
  </Outlining>
  <HyperText />
  <Spelling />
  <Braces />
</SyntaxEdit>